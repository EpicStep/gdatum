// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
)

// Ref: #/components/schemas/DetailedServer
type DetailedServer struct {
	Name         string      `json:"name"`
	URL          OptString   `json:"url"`
	Gamemode     OptString   `json:"gamemode"`
	Language     OptString   `json:"language"`
	PlayersCount OptInt64    `json:"playersCount"`
	CollectedAt  OptDateTime `json:"collectedAt"`
}

// GetName returns the value of Name.
func (s *DetailedServer) GetName() string {
	return s.Name
}

// GetURL returns the value of URL.
func (s *DetailedServer) GetURL() OptString {
	return s.URL
}

// GetGamemode returns the value of Gamemode.
func (s *DetailedServer) GetGamemode() OptString {
	return s.Gamemode
}

// GetLanguage returns the value of Language.
func (s *DetailedServer) GetLanguage() OptString {
	return s.Language
}

// GetPlayersCount returns the value of PlayersCount.
func (s *DetailedServer) GetPlayersCount() OptInt64 {
	return s.PlayersCount
}

// GetCollectedAt returns the value of CollectedAt.
func (s *DetailedServer) GetCollectedAt() OptDateTime {
	return s.CollectedAt
}

// SetName sets the value of Name.
func (s *DetailedServer) SetName(val string) {
	s.Name = val
}

// SetURL sets the value of URL.
func (s *DetailedServer) SetURL(val OptString) {
	s.URL = val
}

// SetGamemode sets the value of Gamemode.
func (s *DetailedServer) SetGamemode(val OptString) {
	s.Gamemode = val
}

// SetLanguage sets the value of Language.
func (s *DetailedServer) SetLanguage(val OptString) {
	s.Language = val
}

// SetPlayersCount sets the value of PlayersCount.
func (s *DetailedServer) SetPlayersCount(val OptInt64) {
	s.PlayersCount = val
}

// SetCollectedAt sets the value of CollectedAt.
func (s *DetailedServer) SetCollectedAt(val OptDateTime) {
	s.CollectedAt = val
}

func (*DetailedServer) getServerRes() {}

// GetServerNotFound is response for GetServer operation.
type GetServerNotFound struct{}

func (*GetServerNotFound) getServerRes() {}

// ListServerStatisticsNotFound is response for ListServerStatistics operation.
type ListServerStatisticsNotFound struct{}

func (*ListServerStatisticsNotFound) listServerStatisticsRes() {}

type ListServerStatisticsOKApplicationJSON []ServerStatisticPoint

func (*ListServerStatisticsOKApplicationJSON) listServerStatisticsRes() {}

type ListServerStatisticsPrecision string

const (
	ListServerStatisticsPrecisionPerHour ListServerStatisticsPrecision = "perHour"
	ListServerStatisticsPrecisionPerDay  ListServerStatisticsPrecision = "perDay"
)

// AllValues returns all ListServerStatisticsPrecision values.
func (ListServerStatisticsPrecision) AllValues() []ListServerStatisticsPrecision {
	return []ListServerStatisticsPrecision{
		ListServerStatisticsPrecisionPerHour,
		ListServerStatisticsPrecisionPerDay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ListServerStatisticsPrecision) MarshalText() ([]byte, error) {
	switch s {
	case ListServerStatisticsPrecisionPerHour:
		return []byte(s), nil
	case ListServerStatisticsPrecisionPerDay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ListServerStatisticsPrecision) UnmarshalText(data []byte) error {
	switch ListServerStatisticsPrecision(data) {
	case ListServerStatisticsPrecisionPerHour:
		*s = ListServerStatisticsPrecisionPerHour
		return nil
	case ListServerStatisticsPrecisionPerDay:
		*s = ListServerStatisticsPrecisionPerDay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ListServerSummariesNotFound is response for ListServerSummaries operation.
type ListServerSummariesNotFound struct{}

func (*ListServerSummariesNotFound) listServerSummariesRes() {}

type ListServerSummariesOKApplicationJSON []ServerSummary

func (*ListServerSummariesOKApplicationJSON) listServerSummariesRes() {}

// Ref: #/components/schemas/MultiplayerSummary
type MultiplayerSummary struct {
	// Multiplayer platform name.
	Name         string `json:"name"`
	PlayersCount int64  `json:"playersCount"`
}

// GetName returns the value of Name.
func (s *MultiplayerSummary) GetName() string {
	return s.Name
}

// GetPlayersCount returns the value of PlayersCount.
func (s *MultiplayerSummary) GetPlayersCount() int64 {
	return s.PlayersCount
}

// SetName sets the value of Name.
func (s *MultiplayerSummary) SetName(val string) {
	s.Name = val
}

// SetPlayersCount sets the value of PlayersCount.
func (s *MultiplayerSummary) SetPlayersCount(val int64) {
	s.PlayersCount = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListServerStatisticsPrecision returns new OptListServerStatisticsPrecision with value set to v.
func NewOptListServerStatisticsPrecision(v ListServerStatisticsPrecision) OptListServerStatisticsPrecision {
	return OptListServerStatisticsPrecision{
		Value: v,
		Set:   true,
	}
}

// OptListServerStatisticsPrecision is optional ListServerStatisticsPrecision.
type OptListServerStatisticsPrecision struct {
	Value ListServerStatisticsPrecision
	Set   bool
}

// IsSet returns true if OptListServerStatisticsPrecision was set.
func (o OptListServerStatisticsPrecision) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListServerStatisticsPrecision) Reset() {
	var v ListServerStatisticsPrecision
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListServerStatisticsPrecision) SetTo(v ListServerStatisticsPrecision) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListServerStatisticsPrecision) Get() (v ListServerStatisticsPrecision, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListServerStatisticsPrecision) Or(d ListServerStatisticsPrecision) ListServerStatisticsPrecision {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/ServerStatisticPoint
type ServerStatisticPoint struct {
	CollectedAt  time.Time `json:"collectedAt"`
	PlayersCount int32     `json:"playersCount"`
}

// GetCollectedAt returns the value of CollectedAt.
func (s *ServerStatisticPoint) GetCollectedAt() time.Time {
	return s.CollectedAt
}

// GetPlayersCount returns the value of PlayersCount.
func (s *ServerStatisticPoint) GetPlayersCount() int32 {
	return s.PlayersCount
}

// SetCollectedAt sets the value of CollectedAt.
func (s *ServerStatisticPoint) SetCollectedAt(val time.Time) {
	s.CollectedAt = val
}

// SetPlayersCount sets the value of PlayersCount.
func (s *ServerStatisticPoint) SetPlayersCount(val int32) {
	s.PlayersCount = val
}

// Ref: #/components/schemas/ServerSummary
type ServerSummary struct {
	ID           string `json:"id"`
	Name         string `json:"name"`
	PlayersCount int32  `json:"playersCount"`
}

// GetID returns the value of ID.
func (s *ServerSummary) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *ServerSummary) GetName() string {
	return s.Name
}

// GetPlayersCount returns the value of PlayersCount.
func (s *ServerSummary) GetPlayersCount() int32 {
	return s.PlayersCount
}

// SetID sets the value of ID.
func (s *ServerSummary) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ServerSummary) SetName(val string) {
	s.Name = val
}

// SetPlayersCount sets the value of PlayersCount.
func (s *ServerSummary) SetPlayersCount(val int32) {
	s.PlayersCount = val
}
